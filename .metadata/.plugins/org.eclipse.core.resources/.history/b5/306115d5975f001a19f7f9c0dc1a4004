package com.isb.posting.test;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.annotation.DirtiesContext.ClassMode;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import com.isb.posting.repository.PostingRepositoryDTO;

@ExtendWith(SpringExtension.class)
@SpringBootTest
@DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD)
public class AccountsPostingTests {

	private static String id = "bfab4693-82a2-4ca3-b951-72367b487626";
	
	@Autowired
    protected PostingRepositoryDTO dto;
	
	@Autowired
    protected WebApplicationContext webApplicationContext;
 
    private MockMvc mockMvc;
 
    
    @BeforeEach
    public void setUp() {
        mockMvc = MockMvcBuilders.webAppContextSetup(this.webApplicationContext).build();
    }
	    
	@Test
	public void postInfo_ShouldReturnOKtatusAndCorrectInfo() throws Exception {
		String jsonBody = 
    			"{\"externalReference\":\"\",\"bundle\":\"\",\"actionCommit\":true,\"postingGroup\":[{\"contract\":null,\"operationType\":null,\"operationId\":\"ASFASF\",\"operationAmount\":{\"amount\":null,\"currency\":\"\"},\"journalOperationId\":\"1SZXSF\",\"journalOperationType\":\"\",\"movementCode\":\"\",\"movementActions\":{\"skipAuthorizationWarning\":false,\"skipUnavailableBalanceAction\":false,\"skipBlock30Days\":false,\"forceExecution\":false,\"withholdingId\":\"\"}}]}";

    	HttpHeaders headers = new HttpHeaders();
    	headers.add("X-IBM-Client-Id", "a1b30a84-7bf3-442e-84a0-e935d8163b5a");
    	headers.add("X-Santander-Global-Id", "a315bt3v0a84");
    	headers.add("Authorization", "Bearer 923ioh89r23ohwedh823ohdn9hite89yyugfsdf");
    	
        mockMvc.perform(post("/accounts/account_transactions")
        		.content(jsonBody.trim())
        		.headers(headers)
        		.contentType(MediaType.APPLICATION_JSON))
        		.andExpect(status().isOk());
	}
	
	@Test
	public void deleteInfo_ShouldReturnOKtatusAndCorrectInfo() throws Exception {
    	HttpHeaders headers = new HttpHeaders();
    	headers.add("X-IBM-Client-Id", "a1b30a84-7bf3-442e-84a0-e935d8163b5a");
    	headers.add("X-Santander-Global-Id", "a315bt3v0a84");
    	headers.add("Authorization", "Bearer 923ioh89r23ohwedh823ohdn9hite89yyugfsdf");
    	
        mockMvc.perform(delete("/accounts/account_transactions/{journalOperationId}", id)
        		.headers(headers)
        		.contentType(MediaType.APPLICATION_JSON))
        		.andExpect(status().isOk());
	}
	
}